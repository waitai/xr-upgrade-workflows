{
  "id": "check-upgrade-matrix-status",
  "name": "check-upgrade-matrix-status",
  "version": "1.0.0",
  "start": "invokeGenericNSORequest",
  "states": [
    {
      "name": "invokeGenericNSORequest",
      "type": "operation",
      "actions": [
        {
          "name": "invokeGenericNSORequestAction",
          "subFlowRef": {
            "workflowId": "GenericNSORequest",
            "version": "1.0.0",
            "invoke": "sync",
            "onParentComplete": "continue"
          },
          "actionDataFilter": {
            "fromStateData": "${{\"deviceName\": .deviceName, \"requestType\": \"GET\", \"resourceId\": .resourceId, \"path\": (\"restconf/data/tailf-ncs:devices/device=\" + .deviceName + \"/live-status/Cisco-IOS-XR-install-oper:install/upgrade-matrix/isos/iso=%2Fharddisk%3A%2F\" + .image)}}"
          }
        }
      ],
      "transition": {
        "nextState": "validateUpgradeMatrixStatus"
      }
    },
    {
      "name": "validateUpgradeMatrixStatus",
      "type": "switch",
      "dataConditions": [
        {
          "name": "http response error",
          "condition": "${ .getResult.status == \"error\" }",
          "transition": "rpc-execution-error"
        },
        {
          "name": "valid result",
          "condition": "${ if .getResult.status == \"success\" and (.getResult.output.\"Cisco-IOS-XR-install-oper:iso\"[0].\"from-running\".\"upgrade-matrix-info\"[0].versions.to != null) then true else false end }",
          "transition": "return-success"
        },
        {
          "name": "invalid result",
          "condition": "${ if .getResult.status == \"success\" and (.getResult.output.\"Cisco-IOS-XR-install-oper:iso\"[0].\"from-running\".\"upgrade-matrix-info\"[0].versions.to == null) then true else false end }",
          "transition": "return-error"
        }
      ],
      "defaultCondition": {
        "transition": "return-error"
      }
    },
    {
      "name": "return-success",
      "type": "operation",
      "actions": [],
      "stateDataFilter": {
        "output": "${ {\"status\": \"success\"} }"
      },
      "end": true
    },
    {
      "name": "return-error",
      "type": "operation",
      "actions": [],
      "stateDataFilter": {
        "output": "${  {\"status\": \"upgrade-matrix-check-error\"} }"
      },
      "end": true
    },
    {
      "name": "rpc-execution-error",
      "type": "operation",
      "actions": [],
      "stateDataFilter": {
        "output": "${ {\"status\": \"rpc-execution-error\"} }"
      },
      "end": true
    }
  ],
  "description": "Workflow generated by GitHub Copilot to check the upgrade matrix for an image to be upgraded to of an XR device via NSO RESTCONF API",
  "specVersion": "0.9"
}